// Example demonstrating the new functional loop syntax in Zen

comptime {
    std := @std
    io := std.io
    iter := std.iterator
}

main = () i32 {
    // Simple range loop - print numbers 1 to 10
    io.println("Numbers from 1 to 10:")
    range(1, 11).loop(i -> {
        io.print(i)
        io.print(" ")
    })
    io.println("")
    
    // Using iterator with loop method
    arr := [1, 2, 3, 4, 5]
    iterator := array_iter(arr, 5)
    
    io.println("Array elements:")
    iterator.loop(value -> {
        io.print(value)
        io.print(" ")
    })
    io.println("")
    
    // Simple conditional loop
    count ::= 0
    io.println("Counting to 5:")
    loop count < 5 {
        io.print(count)
        io.print(" ")
        count = count + 1
    }
    io.println("")
    
    // Infinite loop with break
    n ::= 0
    io.println("Infinite loop with break:")
    loop {
        io.print(n)
        io.print(" ")
        n = n + 1
        n >= 3 ? | true => break | false => {}
    }
    io.println("")
    
    return 0
}